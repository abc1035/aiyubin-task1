/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launch.py:186: FutureWarning: The module torch.distributed.launch is deprecated
and will be removed in future. Use torch.distributed.run.
Note that --use_env is set by default in torch.distributed.run.
If your script expects `--local_rank` argument to be set, please
change it to read from `os.environ['LOCAL_RANK']` instead. See 
https://pytorch.org/docs/stable/distributed.html#launch-utility for 
further instructions

  FutureWarning,
WARNING:torch.distributed.run:*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
fatal: not a git repository (or any of the parent directories): .git
fatal: not a git repository (or any of the parent directories): .git
fatal: not a git repository (or any of the parent directories): .git
2021-10-01 16:32:34,992 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]
CUDA available: True
GPU 0,1,2: GeForce GTX 1080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.9.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.10.1
OpenCV: 4.5.3
MMCV: 1.3.8
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 10.1
MMDetection: 2.16.0+
------------------------------------------------------------

2021-10-01 16:32:36,179 - mmdet - INFO - Distributed training: True
2021-10-01 16:32:37,295 - mmdet - INFO - Config:
optimizer = dict(
    type='SGD',
    lr=0.001,
    momentum=0.9,
    weight_decay=0.0005,
    nesterov=True,
    paramwise_cfg=dict(norm_decay_mult=0.0, bias_decay_mult=0.0))
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='YOLOX',
    warmup='exp',
    by_epoch=False,
    warmup_by_epoch=True,
    warmup_ratio=1,
    warmup_iters=5,
    num_last_epochs=15,
    min_lr_ratio=0.05)
runner = dict(type='EpochBasedRunner', max_epochs=300)
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [
    dict(type='YOLOXModeSwitchHook', num_last_epochs=15, priority=48),
    dict(
        type='SyncRandomSizeHook',
        ratio_range=(14, 26),
        img_scale=(640, 640),
        priority=48),
    dict(type='SyncNormHook', num_last_epochs=15, interval=10, priority=48),
    dict(type='ExpMomentumEMAHook', resume_from=None, priority=49)
]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = '/root/mmdetection/work_dirs/yolox_s_8x8_300e_coco1/epoch_4.pth'
workflow = [('train', 1)]
model = dict(
    type='YOLOX',
    backbone=dict(type='CSPDarknet', deepen_factor=0.33, widen_factor=0.5),
    neck=dict(
        type='YOLOXPAFPN',
        in_channels=[128, 256, 512],
        out_channels=128,
        num_csp_blocks=1),
    bbox_head=dict(
        type='YOLOXHead', num_classes=10, in_channels=128, feat_channels=128),
    train_cfg=dict(assigner=dict(type='SimOTAAssigner', center_radius=2.5)),
    test_cfg=dict(score_thr=0.01, nms=dict(type='nms', iou_threshold=0.65)))
data_root = '/ayb/UVM_Datasets/'
dataset_type = 'CocoDataset'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
img_scale = (640, 640)
train_pipeline = [
    dict(type='Mosaic', img_scale=(640, 640), pad_val=114.0),
    dict(
        type='RandomAffine', scaling_ratio_range=(0.1, 2),
        border=(-320, -320)),
    dict(
        type='MixUp',
        img_scale=(640, 640),
        ratio_range=(0.8, 1.6),
        pad_val=114.0),
    dict(
        type='PhotoMetricDistortion',
        brightness_delta=32,
        contrast_range=(0.5, 1.5),
        saturation_range=(0.5, 1.5),
        hue_delta=18),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(type='Resize', keep_ratio=True),
    dict(type='Pad', pad_to_square=True, pad_val=114.0),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
train_dataset = dict(
    type='MultiImageMixDataset',
    dataset=dict(
        type='CocoDataset',
        ann_file='/ayb/UVM_Datasets/voc_train3.json',
        img_prefix='/ayb/UVM_Datasets/voc8/VOCdevkit/VOC2007/JPEGImages',
        pipeline=[
            dict(type='LoadImageFromFile', to_float32=True),
            dict(type='LoadAnnotations', with_bbox=True)
        ],
        filter_empty_gt=False),
    pipeline=[
        dict(type='Mosaic', img_scale=(640, 640), pad_val=114.0),
        dict(
            type='RandomAffine',
            scaling_ratio_range=(0.1, 2),
            border=(-320, -320)),
        dict(
            type='MixUp',
            img_scale=(640, 640),
            ratio_range=(0.8, 1.6),
            pad_val=114.0),
        dict(
            type='PhotoMetricDistortion',
            brightness_delta=32,
            contrast_range=(0.5, 1.5),
            saturation_range=(0.5, 1.5),
            hue_delta=18),
        dict(type='RandomFlip', flip_ratio=0.5),
        dict(type='Resize', keep_ratio=True),
        dict(type='Pad', pad_to_square=True, pad_val=114.0),
        dict(
            type='Normalize',
            mean=[123.675, 116.28, 103.53],
            std=[58.395, 57.12, 57.375],
            to_rgb=True),
        dict(type='DefaultFormatBundle'),
        dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
    ],
    dynamic_scale=(640, 640))
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(640, 640),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(type='Pad', size=(640, 640), pad_val=114.0),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=8,
    workers_per_gpu=0,
    train=dict(
        type='MultiImageMixDataset',
        dataset=dict(
            type='CocoDataset',
            ann_file='/ayb/UVM_Datasets/voc_train3.json',
            img_prefix='/ayb/UVM_Datasets/voc8/VOCdevkit/VOC2007/JPEGImages',
            pipeline=[
                dict(type='LoadImageFromFile', to_float32=True),
                dict(type='LoadAnnotations', with_bbox=True)
            ],
            filter_empty_gt=False),
        pipeline=[
            dict(type='Mosaic', img_scale=(640, 640), pad_val=114.0),
            dict(
                type='RandomAffine',
                scaling_ratio_range=(0.1, 2),
                border=(-320, -320)),
            dict(
                type='MixUp',
                img_scale=(640, 640),
                ratio_range=(0.8, 1.6),
                pad_val=114.0),
            dict(
                type='PhotoMetricDistortion',
                brightness_delta=32,
                contrast_range=(0.5, 1.5),
                saturation_range=(0.5, 1.5),
                hue_delta=18),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(type='Resize', keep_ratio=True),
            dict(type='Pad', pad_to_square=True, pad_val=114.0),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ],
        dynamic_scale=(640, 640)),
    val=dict(
        type='CocoDataset',
        ann_file='/ayb/UVM_Datasets/voc_valid3.json',
        img_prefix='/ayb/UVM_Datasets/voc8/VOCdevkit/VOC2007/JPEGImages',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(640, 640),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(type='Pad', size=(640, 640), pad_val=114.0),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='DefaultFormatBundle'),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='/ayb/UVM_Datasets/voc_test3.json',
        img_prefix='/ayb/UVM_Datasets/voc8/VOCdevkit/VOC2007/JPEGImages',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(640, 640),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(type='Pad', size=(640, 640), pad_val=114.0),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='DefaultFormatBundle'),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
interval = 10
evaluation = dict(interval=10, metric='bbox')
work_dir = './work_dirs/yolox_s_8x8_300e_coco1'
gpu_ids = range(0, 3)

loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
Done (t=0.84s)
creating index...
index created!
Done (t=0.82s)
creating index...
index created!
fatal: not a git repository (or any of the parent directories): .git
Done (t=0.88s)
creating index...
index created!
fatal: not a git repository (or any of the parent directories): .git
fatal: not a git repository (or any of the parent directories): .git
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
Done (t=0.84s)
creating index...
Done (t=0.84s)
creating index...
Done (t=0.90s)
creating index...
index created!
index created!
index created!
/root/mmdetection/mmdet/core/hook/sync_random_size_hook.py:38: UserWarning: DeprecationWarning: SyncRandomSizeHook is deprecated. Please use Resize pipeline to achieve similar functions. Due to the multi-process dataloader, its behavior is different from YOLOX's official implementation, the official is to change the size every fixed iteration interval and what we achieved is a fixed epoch interval.
  warnings.warn('DeprecationWarning: SyncRandomSizeHook is deprecated. '
/root/mmdetection/mmdet/core/hook/sync_random_size_hook.py:38: UserWarning: DeprecationWarning: SyncRandomSizeHook is deprecated. Please use Resize pipeline to achieve similar functions. Due to the multi-process dataloader, its behavior is different from YOLOX's official implementation, the official is to change the size every fixed iteration interval and what we achieved is a fixed epoch interval.
  warnings.warn('DeprecationWarning: SyncRandomSizeHook is deprecated. '
/root/mmdetection/mmdet/core/hook/sync_random_size_hook.py:38: UserWarning: DeprecationWarning: SyncRandomSizeHook is deprecated. Please use Resize pipeline to achieve similar functions. Due to the multi-process dataloader, its behavior is different from YOLOX's official implementation, the official is to change the size every fixed iteration interval and what we achieved is a fixed epoch interval.
  warnings.warn('DeprecationWarning: SyncRandomSizeHook is deprecated. '
2021-10-01 16:32:46,325 - mmdet - INFO - load checkpoint from /root/mmdetection/work_dirs/yolox_s_8x8_300e_coco1/epoch_4.pth
2021-10-01 16:32:46,326 - mmdet - INFO - Use load_from_local loader
2021-10-01 16:32:47,781 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: ema_backbone_stem_conv_conv_weight, ema_backbone_stem_conv_bn_weight, ema_backbone_stem_conv_bn_bias, ema_backbone_stem_conv_bn_running_mean, ema_backbone_stem_conv_bn_running_var, ema_backbone_stem_conv_bn_num_batches_tracked, ema_backbone_stage1_0_conv_weight, ema_backbone_stage1_0_bn_weight, ema_backbone_stage1_0_bn_bias, ema_backbone_stage1_0_bn_running_mean, ema_backbone_stage1_0_bn_running_var, ema_backbone_stage1_0_bn_num_batches_tracked, ema_backbone_stage1_1_main_conv_conv_weight, ema_backbone_stage1_1_main_conv_bn_weight, ema_backbone_stage1_1_main_conv_bn_bias, ema_backbone_stage1_1_main_conv_bn_running_mean, ema_backbone_stage1_1_main_conv_bn_running_var, ema_backbone_stage1_1_main_conv_bn_num_batches_tracked, ema_backbone_stage1_1_short_conv_conv_weight, ema_backbone_stage1_1_short_conv_bn_weight, ema_backbone_stage1_1_short_conv_bn_bias, ema_backbone_stage1_1_short_conv_bn_running_mean, ema_backbone_stage1_1_short_conv_bn_running_var, ema_backbone_stage1_1_short_conv_bn_num_batches_tracked, ema_backbone_stage1_1_final_conv_conv_weight, ema_backbone_stage1_1_final_conv_bn_weight, ema_backbone_stage1_1_final_conv_bn_bias, ema_backbone_stage1_1_final_conv_bn_running_mean, ema_backbone_stage1_1_final_conv_bn_running_var, ema_backbone_stage1_1_final_conv_bn_num_batches_tracked, ema_backbone_stage1_1_blocks_0_conv1_conv_weight, ema_backbone_stage1_1_blocks_0_conv1_bn_weight, ema_backbone_stage1_1_blocks_0_conv1_bn_bias, ema_backbone_stage1_1_blocks_0_conv1_bn_running_mean, ema_backbone_stage1_1_blocks_0_conv1_bn_running_var, ema_backbone_stage1_1_blocks_0_conv1_bn_num_batches_tracked, ema_backbone_stage1_1_blocks_0_conv2_conv_weight, ema_backbone_stage1_1_blocks_0_conv2_bn_weight, ema_backbone_stage1_1_blocks_0_conv2_bn_bias, ema_backbone_stage1_1_blocks_0_conv2_bn_running_mean, ema_backbone_stage1_1_blocks_0_conv2_bn_running_var, ema_backbone_stage1_1_blocks_0_conv2_bn_num_batches_tracked, ema_backbone_stage2_0_conv_weight, ema_backbone_stage2_0_bn_weight, ema_backbone_stage2_0_bn_bias, ema_backbone_stage2_0_bn_running_mean, ema_backbone_stage2_0_bn_running_var, ema_backbone_stage2_0_bn_num_batches_tracked, ema_backbone_stage2_1_main_conv_conv_weight, ema_backbone_stage2_1_main_conv_bn_weight, ema_backbone_stage2_1_main_conv_bn_bias, ema_backbone_stage2_1_main_conv_bn_running_mean, ema_backbone_stage2_1_main_conv_bn_running_var, ema_backbone_stage2_1_main_conv_bn_num_batches_tracked, ema_backbone_stage2_1_short_conv_conv_weight, ema_backbone_stage2_1_short_conv_bn_weight, ema_backbone_stage2_1_short_conv_bn_bias, ema_backbone_stage2_1_short_conv_bn_running_mean, ema_backbone_stage2_1_short_conv_bn_running_var, ema_backbone_stage2_1_short_conv_bn_num_batches_tracked, ema_backbone_stage2_1_final_conv_conv_weight, ema_backbone_stage2_1_final_conv_bn_weight, ema_backbone_stage2_1_final_conv_bn_bias, ema_backbone_stage2_1_final_conv_bn_running_mean, ema_backbone_stage2_1_final_conv_bn_running_var, ema_backbone_stage2_1_final_conv_bn_num_batches_tracked, ema_backbone_stage2_1_blocks_0_conv1_conv_weight, ema_backbone_stage2_1_blocks_0_conv1_bn_weight, ema_backbone_stage2_1_blocks_0_conv1_bn_bias, ema_backbone_stage2_1_blocks_0_conv1_bn_running_mean, ema_backbone_stage2_1_blocks_0_conv1_bn_running_var, ema_backbone_stage2_1_blocks_0_conv1_bn_num_batches_tracked, ema_backbone_stage2_1_blocks_0_conv2_conv_weight, ema_backbone_stage2_1_blocks_0_conv2_bn_weight, ema_backbone_stage2_1_blocks_0_conv2_bn_bias, ema_backbone_stage2_1_blocks_0_conv2_bn_running_mean, ema_backbone_stage2_1_blocks_0_conv2_bn_running_var, ema_backbone_stage2_1_blocks_0_conv2_bn_num_batches_tracked, ema_backbone_stage2_1_blocks_1_conv1_conv_weight, ema_backbone_stage2_1_blocks_1_conv1_bn_weight, ema_backbone_stage2_1_blocks_1_conv1_bn_bias, ema_backbone_stage2_1_blocks_1_conv1_bn_running_mean, ema_backbone_stage2_1_blocks_1_conv1_bn_running_var, ema_backbone_stage2_1_blocks_1_conv1_bn_num_batches_tracked, ema_backbone_stage2_1_blocks_1_conv2_conv_weight, ema_backbone_stage2_1_blocks_1_conv2_bn_weight, ema_backbone_stage2_1_blocks_1_conv2_bn_bias, ema_backbone_stage2_1_blocks_1_conv2_bn_running_mean, ema_backbone_stage2_1_blocks_1_conv2_bn_running_var, ema_backbone_stage2_1_blocks_1_conv2_bn_num_batches_tracked, ema_backbone_stage2_1_blocks_2_conv1_conv_weight, ema_backbone_stage2_1_blocks_2_conv1_bn_weight, ema_backbone_stage2_1_blocks_2_conv1_bn_bias, ema_backbone_stage2_1_blocks_2_conv1_bn_running_mean, ema_backbone_stage2_1_blocks_2_conv1_bn_running_var, ema_backbone_stage2_1_blocks_2_conv1_bn_num_batches_tracked, ema_backbone_stage2_1_blocks_2_conv2_conv_weight, ema_backbone_stage2_1_blocks_2_conv2_bn_weight, ema_backbone_stage2_1_blocks_2_conv2_bn_bias, ema_backbone_stage2_1_blocks_2_conv2_bn_running_mean, ema_backbone_stage2_1_blocks_2_conv2_bn_running_var, ema_backbone_stage2_1_blocks_2_conv2_bn_num_batches_tracked, ema_backbone_stage3_0_conv_weight, ema_backbone_stage3_0_bn_weight, ema_backbone_stage3_0_bn_bias, ema_backbone_stage3_0_bn_running_mean, ema_backbone_stage3_0_bn_running_var, ema_backbone_stage3_0_bn_num_batches_tracked, ema_backbone_stage3_1_main_conv_conv_weight, ema_backbone_stage3_1_main_conv_bn_weight, ema_backbone_stage3_1_main_conv_bn_bias, ema_backbone_stage3_1_main_conv_bn_running_mean, ema_backbone_stage3_1_main_conv_bn_running_var, ema_backbone_stage3_1_main_conv_bn_num_batches_tracked, ema_backbone_stage3_1_short_conv_conv_weight, ema_backbone_stage3_1_short_conv_bn_weight, ema_backbone_stage3_1_short_conv_bn_bias, ema_backbone_stage3_1_short_conv_bn_running_mean, ema_backbone_stage3_1_short_conv_bn_running_var, ema_backbone_stage3_1_short_conv_bn_num_batches_tracked, ema_backbone_stage3_1_final_conv_conv_weight, ema_backbone_stage3_1_final_conv_bn_weight, ema_backbone_stage3_1_final_conv_bn_bias, ema_backbone_stage3_1_final_conv_bn_running_mean, ema_backbone_stage3_1_final_conv_bn_running_var, ema_backbone_stage3_1_final_conv_bn_num_batches_tracked, ema_backbone_stage3_1_blocks_0_conv1_conv_weight, ema_backbone_stage3_1_blocks_0_conv1_bn_weight, ema_backbone_stage3_1_blocks_0_conv1_bn_bias, ema_backbone_stage3_1_blocks_0_conv1_bn_running_mean, ema_backbone_stage3_1_blocks_0_conv1_bn_running_var, ema_backbone_stage3_1_blocks_0_conv1_bn_num_batches_tracked, ema_backbone_stage3_1_blocks_0_conv2_conv_weight, ema_backbone_stage3_1_blocks_0_conv2_bn_weight, ema_backbone_stage3_1_blocks_0_conv2_bn_bias, ema_backbone_stage3_1_blocks_0_conv2_bn_running_mean, ema_backbone_stage3_1_blocks_0_conv2_bn_running_var, ema_backbone_stage3_1_blocks_0_conv2_bn_num_batches_tracked, ema_backbone_stage3_1_blocks_1_conv1_conv_weight, ema_backbone_stage3_1_blocks_1_conv1_bn_weight, ema_backbone_stage3_1_blocks_1_conv1_bn_bias, ema_backbone_stage3_1_blocks_1_conv1_bn_running_mean, ema_backbone_stage3_1_blocks_1_conv1_bn_running_var, ema_backbone_stage3_1_blocks_1_conv1_bn_num_batches_tracked, ema_backbone_stage3_1_blocks_1_conv2_conv_weight, ema_backbone_stage3_1_blocks_1_conv2_bn_weight, ema_backbone_stage3_1_blocks_1_conv2_bn_bias, ema_backbone_stage3_1_blocks_1_conv2_bn_running_mean, ema_backbone_stage3_1_blocks_1_conv2_bn_running_var, ema_backbone_stage3_1_blocks_1_conv2_bn_num_batches_tracked, ema_backbone_stage3_1_blocks_2_conv1_conv_weight, ema_backbone_stage3_1_blocks_2_conv1_bn_weight, ema_backbone_stage3_1_blocks_2_conv1_bn_bias, ema_backbone_stage3_1_blocks_2_conv1_bn_running_mean, ema_backbone_stage3_1_blocks_2_conv1_bn_running_var, ema_backbone_stage3_1_blocks_2_conv1_bn_num_batches_tracked, ema_backbone_stage3_1_blocks_2_conv2_conv_weight, ema_backbone_stage3_1_blocks_2_conv2_bn_weight, ema_backbone_stage3_1_blocks_2_conv2_bn_bias, ema_backbone_stage3_1_blocks_2_conv2_bn_running_mean, ema_backbone_stage3_1_blocks_2_conv2_bn_running_var, ema_backbone_stage3_1_blocks_2_conv2_bn_num_batches_tracked, ema_backbone_stage4_0_conv_weight, ema_backbone_stage4_0_bn_weight, ema_backbone_stage4_0_bn_bias, ema_backbone_stage4_0_bn_running_mean, ema_backbone_stage4_0_bn_running_var, ema_backbone_stage4_0_bn_num_batches_tracked, ema_backbone_stage4_1_conv1_conv_weight, ema_backbone_stage4_1_conv1_bn_weight, ema_backbone_stage4_1_conv1_bn_bias, ema_backbone_stage4_1_conv1_bn_running_mean, ema_backbone_stage4_1_conv1_bn_running_var, ema_backbone_stage4_1_conv1_bn_num_batches_tracked, ema_backbone_stage4_1_conv2_conv_weight, ema_backbone_stage4_1_conv2_bn_weight, ema_backbone_stage4_1_conv2_bn_bias, ema_backbone_stage4_1_conv2_bn_running_mean, ema_backbone_stage4_1_conv2_bn_running_var, ema_backbone_stage4_1_conv2_bn_num_batches_tracked, ema_backbone_stage4_2_main_conv_conv_weight, ema_backbone_stage4_2_main_conv_bn_weight, ema_backbone_stage4_2_main_conv_bn_bias, ema_backbone_stage4_2_main_conv_bn_running_mean, ema_backbone_stage4_2_main_conv_bn_running_var, ema_backbone_stage4_2_main_conv_bn_num_batches_tracked, ema_backbone_stage4_2_short_conv_conv_weight, ema_backbone_stage4_2_short_conv_bn_weight, ema_backbone_stage4_2_short_conv_bn_bias, ema_backbone_stage4_2_short_conv_bn_running_mean, ema_backbone_stage4_2_short_conv_bn_running_var, ema_backbone_stage4_2_short_conv_bn_num_batches_tracked, ema_backbone_stage4_2_final_conv_conv_weight, ema_backbone_stage4_2_final_conv_bn_weight, ema_backbone_stage4_2_final_conv_bn_bias, ema_backbone_stage4_2_final_conv_bn_running_mean, ema_backbone_stage4_2_final_conv_bn_running_var, ema_backbone_stage4_2_final_conv_bn_num_batches_tracked, ema_backbone_stage4_2_blocks_0_conv1_conv_weight, ema_backbone_stage4_2_blocks_0_conv1_bn_weight, ema_backbone_stage4_2_blocks_0_conv1_bn_bias, ema_backbone_stage4_2_blocks_0_conv1_bn_running_mean, ema_backbone_stage4_2_blocks_0_conv1_bn_running_var, ema_backbone_stage4_2_blocks_0_conv1_bn_num_batches_tracked, ema_backbone_stage4_2_blocks_0_conv2_conv_weight, ema_backbone_stage4_2_blocks_0_conv2_bn_weight, ema_backbone_stage4_2_blocks_0_conv2_bn_bias, ema_backbone_stage4_2_blocks_0_conv2_bn_running_mean, ema_backbone_stage4_2_blocks_0_conv2_bn_running_var, ema_backbone_stage4_2_blocks_0_conv2_bn_num_batches_tracked, ema_neck_reduce_layers_0_conv_weight, ema_neck_reduce_layers_0_bn_weight, ema_neck_reduce_layers_0_bn_bias, ema_neck_reduce_layers_0_bn_running_mean, ema_neck_reduce_layers_0_bn_running_var, ema_neck_reduce_layers_0_bn_num_batches_tracked, ema_neck_reduce_layers_1_conv_weight, ema_neck_reduce_layers_1_bn_weight, ema_neck_reduce_layers_1_bn_bias, ema_neck_reduce_layers_1_bn_running_mean, ema_neck_reduce_layers_1_bn_running_var, ema_neck_reduce_layers_1_bn_num_batches_tracked, ema_neck_top_down_blocks_0_main_conv_conv_weight, ema_neck_top_down_blocks_0_main_conv_bn_weight, ema_neck_top_down_blocks_0_main_conv_bn_bias, ema_neck_top_down_blocks_0_main_conv_bn_running_mean, ema_neck_top_down_blocks_0_main_conv_bn_running_var, ema_neck_top_down_blocks_0_main_conv_bn_num_batches_tracked, ema_neck_top_down_blocks_0_short_conv_conv_weight, ema_neck_top_down_blocks_0_short_conv_bn_weight, ema_neck_top_down_blocks_0_short_conv_bn_bias, ema_neck_top_down_blocks_0_short_conv_bn_running_mean, ema_neck_top_down_blocks_0_short_conv_bn_running_var, ema_neck_top_down_blocks_0_short_conv_bn_num_batches_tracked, ema_neck_top_down_blocks_0_final_conv_conv_weight, ema_neck_top_down_blocks_0_final_conv_bn_weight, ema_neck_top_down_blocks_0_final_conv_bn_bias, ema_neck_top_down_blocks_0_final_conv_bn_running_mean, ema_neck_top_down_blocks_0_final_conv_bn_running_var, ema_neck_top_down_blocks_0_final_conv_bn_num_batches_tracked, ema_neck_top_down_blocks_0_blocks_0_conv1_conv_weight, ema_neck_top_down_blocks_0_blocks_0_conv1_bn_weight, ema_neck_top_down_blocks_0_blocks_0_conv1_bn_bias, ema_neck_top_down_blocks_0_blocks_0_conv1_bn_running_mean, ema_neck_top_down_blocks_0_blocks_0_conv1_bn_running_var, ema_neck_top_down_blocks_0_blocks_0_conv1_bn_num_batches_tracked, ema_neck_top_down_blocks_0_blocks_0_conv2_conv_weight, ema_neck_top_down_blocks_0_blocks_0_conv2_bn_weight, ema_neck_top_down_blocks_0_blocks_0_conv2_bn_bias, ema_neck_top_down_blocks_0_blocks_0_conv2_bn_running_mean, ema_neck_top_down_blocks_0_blocks_0_conv2_bn_running_var, ema_neck_top_down_blocks_0_blocks_0_conv2_bn_num_batches_tracked, ema_neck_top_down_blocks_1_main_conv_conv_weight, ema_neck_top_down_blocks_1_main_conv_bn_weight, ema_neck_top_down_blocks_1_main_conv_bn_bias, ema_neck_top_down_blocks_1_main_conv_bn_running_mean, ema_neck_top_down_blocks_1_main_conv_bn_running_var, ema_neck_top_down_blocks_1_main_conv_bn_num_batches_tracked, ema_neck_top_down_blocks_1_short_conv_conv_weight, ema_neck_top_down_blocks_1_short_conv_bn_weight, ema_neck_top_down_blocks_1_short_conv_bn_bias, ema_neck_top_down_blocks_1_short_conv_bn_running_mean, ema_neck_top_down_blocks_1_short_conv_bn_running_var, ema_neck_top_down_blocks_1_short_conv_bn_num_batches_tracked, ema_neck_top_down_blocks_1_final_conv_conv_weight, ema_neck_top_down_blocks_1_final_conv_bn_weight, ema_neck_top_down_blocks_1_final_conv_bn_bias, ema_neck_top_down_blocks_1_final_conv_bn_running_mean, ema_neck_top_down_blocks_1_final_conv_bn_running_var, ema_neck_top_down_blocks_1_final_conv_bn_num_batches_tracked, ema_neck_top_down_blocks_1_blocks_0_conv1_conv_weight, ema_neck_top_down_blocks_1_blocks_0_conv1_bn_weight, ema_neck_top_down_blocks_1_blocks_0_conv1_bn_bias, ema_neck_top_down_blocks_1_blocks_0_conv1_bn_running_mean, ema_neck_top_down_blocks_1_blocks_0_conv1_bn_running_var, ema_neck_top_down_blocks_1_blocks_0_conv1_bn_num_batches_tracked, ema_neck_top_down_blocks_1_blocks_0_conv2_conv_weight, ema_neck_top_down_blocks_1_blocks_0_conv2_bn_weight, ema_neck_top_down_blocks_1_blocks_0_conv2_bn_bias, ema_neck_top_down_blocks_1_blocks_0_conv2_bn_running_mean, ema_neck_top_down_blocks_1_blocks_0_conv2_bn_running_var, ema_neck_top_down_blocks_1_blocks_0_conv2_bn_num_batches_tracked, ema_neck_downsamples_0_conv_weight, ema_neck_downsamples_0_bn_weight, ema_neck_downsamples_0_bn_bias, ema_neck_downsamples_0_bn_running_mean, ema_neck_downsamples_0_bn_running_var, ema_neck_downsamples_0_bn_num_batches_tracked, ema_neck_downsamples_1_conv_weight, ema_neck_downsamples_1_bn_weight, ema_neck_downsamples_1_bn_bias, ema_neck_downsamples_1_bn_running_mean, ema_neck_downsamples_1_bn_running_var, ema_neck_downsamples_1_bn_num_batches_tracked, ema_neck_bottom_up_blocks_0_main_conv_conv_weight, ema_neck_bottom_up_blocks_0_main_conv_bn_weight, ema_neck_bottom_up_blocks_0_main_conv_bn_bias, ema_neck_bottom_up_blocks_0_main_conv_bn_running_mean, ema_neck_bottom_up_blocks_0_main_conv_bn_running_var, ema_neck_bottom_up_blocks_0_main_conv_bn_num_batches_tracked, ema_neck_bottom_up_blocks_0_short_conv_conv_weight, ema_neck_bottom_up_blocks_0_short_conv_bn_weight, ema_neck_bottom_up_blocks_0_short_conv_bn_bias, ema_neck_bottom_up_blocks_0_short_conv_bn_running_mean, ema_neck_bottom_up_blocks_0_short_conv_bn_running_var, ema_neck_bottom_up_blocks_0_short_conv_bn_num_batches_tracked, ema_neck_bottom_up_blocks_0_final_conv_conv_weight, ema_neck_bottom_up_blocks_0_final_conv_bn_weight, ema_neck_bottom_up_blocks_0_final_conv_bn_bias, ema_neck_bottom_up_blocks_0_final_conv_bn_running_mean, ema_neck_bottom_up_blocks_0_final_conv_bn_running_var, ema_neck_bottom_up_blocks_0_final_conv_bn_num_batches_tracked, ema_neck_bottom_up_blocks_0_blocks_0_conv1_conv_weight, ema_neck_bottom_up_blocks_0_blocks_0_conv1_bn_weight, ema_neck_bottom_up_blocks_0_blocks_0_conv1_bn_bias, ema_neck_bottom_up_blocks_0_blocks_0_conv1_bn_running_mean, ema_neck_bottom_up_blocks_0_blocks_0_conv1_bn_running_var, ema_neck_bottom_up_blocks_0_blocks_0_conv1_bn_num_batches_tracked, ema_neck_bottom_up_blocks_0_blocks_0_conv2_conv_weight, ema_neck_bottom_up_blocks_0_blocks_0_conv2_bn_weight, ema_neck_bottom_up_blocks_0_blocks_0_conv2_bn_bias, ema_neck_bottom_up_blocks_0_blocks_0_conv2_bn_running_mean, ema_neck_bottom_up_blocks_0_blocks_0_conv2_bn_running_var, ema_neck_bottom_up_blocks_0_blocks_0_conv2_bn_num_batches_tracked, ema_neck_bottom_up_blocks_1_main_conv_conv_weight, ema_neck_bottom_up_blocks_1_main_conv_bn_weight, ema_neck_bottom_up_blocks_1_main_conv_bn_bias, ema_neck_bottom_up_blocks_1_main_conv_bn_running_mean, ema_neck_bottom_up_blocks_1_main_conv_bn_running_var, ema_neck_bottom_up_blocks_1_main_conv_bn_num_batches_tracked, ema_neck_bottom_up_blocks_1_short_conv_conv_weight, ema_neck_bottom_up_blocks_1_short_conv_bn_weight, ema_neck_bottom_up_blocks_1_short_conv_bn_bias, ema_neck_bottom_up_blocks_1_short_conv_bn_running_mean, ema_neck_bottom_up_blocks_1_short_conv_bn_running_var, ema_neck_bottom_up_blocks_1_short_conv_bn_num_batches_tracked, ema_neck_bottom_up_blocks_1_final_conv_conv_weight, ema_neck_bottom_up_blocks_1_final_conv_bn_weight, ema_neck_bottom_up_blocks_1_final_conv_bn_bias, ema_neck_bottom_up_blocks_1_final_conv_bn_running_mean, ema_neck_bottom_up_blocks_1_final_conv_bn_running_var, ema_neck_bottom_up_blocks_1_final_conv_bn_num_batches_tracked, ema_neck_bottom_up_blocks_1_blocks_0_conv1_conv_weight, ema_neck_bottom_up_blocks_1_blocks_0_conv1_bn_weight, ema_neck_bottom_up_blocks_1_blocks_0_conv1_bn_bias, ema_neck_bottom_up_blocks_1_blocks_0_conv1_bn_running_mean, ema_neck_bottom_up_blocks_1_blocks_0_conv1_bn_running_var, ema_neck_bottom_up_blocks_1_blocks_0_conv1_bn_num_batches_tracked, ema_neck_bottom_up_blocks_1_blocks_0_conv2_conv_weight, ema_neck_bottom_up_blocks_1_blocks_0_conv2_bn_weight, ema_neck_bottom_up_blocks_1_blocks_0_conv2_bn_bias, ema_neck_bottom_up_blocks_1_blocks_0_conv2_bn_running_mean, ema_neck_bottom_up_blocks_1_blocks_0_conv2_bn_running_var, ema_neck_bottom_up_blocks_1_blocks_0_conv2_bn_num_batches_tracked, ema_neck_out_convs_0_conv_weight, ema_neck_out_convs_0_bn_weight, ema_neck_out_convs_0_bn_bias, ema_neck_out_convs_0_bn_running_mean, ema_neck_out_convs_0_bn_running_var, ema_neck_out_convs_0_bn_num_batches_tracked, ema_neck_out_convs_1_conv_weight, ema_neck_out_convs_1_bn_weight, ema_neck_out_convs_1_bn_bias, ema_neck_out_convs_1_bn_running_mean, ema_neck_out_convs_1_bn_running_var, ema_neck_out_convs_1_bn_num_batches_tracked, ema_neck_out_convs_2_conv_weight, ema_neck_out_convs_2_bn_weight, ema_neck_out_convs_2_bn_bias, ema_neck_out_convs_2_bn_running_mean, ema_neck_out_convs_2_bn_running_var, ema_neck_out_convs_2_bn_num_batches_tracked, ema_bbox_head_multi_level_cls_convs_0_0_conv_weight, ema_bbox_head_multi_level_cls_convs_0_0_bn_weight, ema_bbox_head_multi_level_cls_convs_0_0_bn_bias, ema_bbox_head_multi_level_cls_convs_0_0_bn_running_mean, ema_bbox_head_multi_level_cls_convs_0_0_bn_running_var, ema_bbox_head_multi_level_cls_convs_0_0_bn_num_batches_tracked, ema_bbox_head_multi_level_cls_convs_0_1_conv_weight, ema_bbox_head_multi_level_cls_convs_0_1_bn_weight, ema_bbox_head_multi_level_cls_convs_0_1_bn_bias, ema_bbox_head_multi_level_cls_convs_0_1_bn_running_mean, ema_bbox_head_multi_level_cls_convs_0_1_bn_running_var, ema_bbox_head_multi_level_cls_convs_0_1_bn_num_batches_tracked, ema_bbox_head_multi_level_cls_convs_1_0_conv_weight, ema_bbox_head_multi_level_cls_convs_1_0_bn_weight, ema_bbox_head_multi_level_cls_convs_1_0_bn_bias, ema_bbox_head_multi_level_cls_convs_1_0_bn_running_mean, ema_bbox_head_multi_level_cls_convs_1_0_bn_running_var, ema_bbox_head_multi_level_cls_convs_1_0_bn_num_batches_tracked, ema_bbox_head_multi_level_cls_convs_1_1_conv_weight, ema_bbox_head_multi_level_cls_convs_1_1_bn_weight, ema_bbox_head_multi_level_cls_convs_1_1_bn_bias, ema_bbox_head_multi_level_cls_convs_1_1_bn_running_mean, ema_bbox_head_multi_level_cls_convs_1_1_bn_running_var, ema_bbox_head_multi_level_cls_convs_1_1_bn_num_batches_tracked, ema_bbox_head_multi_level_cls_convs_2_0_conv_weight, ema_bbox_head_multi_level_cls_convs_2_0_bn_weight, ema_bbox_head_multi_level_cls_convs_2_0_bn_bias, ema_bbox_head_multi_level_cls_convs_2_0_bn_running_mean, ema_bbox_head_multi_level_cls_convs_2_0_bn_running_var, ema_bbox_head_multi_level_cls_convs_2_0_bn_num_batches_tracked, ema_bbox_head_multi_level_cls_convs_2_1_conv_weight, ema_bbox_head_multi_level_cls_convs_2_1_bn_weight, ema_bbox_head_multi_level_cls_convs_2_1_bn_bias, ema_bbox_head_multi_level_cls_convs_2_1_bn_running_mean, ema_bbox_head_multi_level_cls_convs_2_1_bn_running_var, ema_bbox_head_multi_level_cls_convs_2_1_bn_num_batches_tracked, ema_bbox_head_multi_level_reg_convs_0_0_conv_weight, ema_bbox_head_multi_level_reg_convs_0_0_bn_weight, ema_bbox_head_multi_level_reg_convs_0_0_bn_bias, ema_bbox_head_multi_level_reg_convs_0_0_bn_running_mean, ema_bbox_head_multi_level_reg_convs_0_0_bn_running_var, ema_bbox_head_multi_level_reg_convs_0_0_bn_num_batches_tracked, ema_bbox_head_multi_level_reg_convs_0_1_conv_weight, ema_bbox_head_multi_level_reg_convs_0_1_bn_weight, ema_bbox_head_multi_level_reg_convs_0_1_bn_bias, ema_bbox_head_multi_level_reg_convs_0_1_bn_running_mean, ema_bbox_head_multi_level_reg_convs_0_1_bn_running_var, ema_bbox_head_multi_level_reg_convs_0_1_bn_num_batches_tracked, ema_bbox_head_multi_level_reg_convs_1_0_conv_weight, ema_bbox_head_multi_level_reg_convs_1_0_bn_weight, ema_bbox_head_multi_level_reg_convs_1_0_bn_bias, ema_bbox_head_multi_level_reg_convs_1_0_bn_running_mean, ema_bbox_head_multi_level_reg_convs_1_0_bn_running_var, ema_bbox_head_multi_level_reg_convs_1_0_bn_num_batches_tracked, ema_bbox_head_multi_level_reg_convs_1_1_conv_weight, ema_bbox_head_multi_level_reg_convs_1_1_bn_weight, ema_bbox_head_multi_level_reg_convs_1_1_bn_bias, ema_bbox_head_multi_level_reg_convs_1_1_bn_running_mean, ema_bbox_head_multi_level_reg_convs_1_1_bn_running_var, ema_bbox_head_multi_level_reg_convs_1_1_bn_num_batches_tracked, ema_bbox_head_multi_level_reg_convs_2_0_conv_weight, ema_bbox_head_multi_level_reg_convs_2_0_bn_weight, ema_bbox_head_multi_level_reg_convs_2_0_bn_bias, ema_bbox_head_multi_level_reg_convs_2_0_bn_running_mean, ema_bbox_head_multi_level_reg_convs_2_0_bn_running_var, ema_bbox_head_multi_level_reg_convs_2_0_bn_num_batches_tracked, ema_bbox_head_multi_level_reg_convs_2_1_conv_weight, ema_bbox_head_multi_level_reg_convs_2_1_bn_weight, ema_bbox_head_multi_level_reg_convs_2_1_bn_bias, ema_bbox_head_multi_level_reg_convs_2_1_bn_running_mean, ema_bbox_head_multi_level_reg_convs_2_1_bn_running_var, ema_bbox_head_multi_level_reg_convs_2_1_bn_num_batches_tracked, ema_bbox_head_multi_level_conv_cls_0_weight, ema_bbox_head_multi_level_conv_cls_0_bias, ema_bbox_head_multi_level_conv_cls_1_weight, ema_bbox_head_multi_level_conv_cls_1_bias, ema_bbox_head_multi_level_conv_cls_2_weight, ema_bbox_head_multi_level_conv_cls_2_bias, ema_bbox_head_multi_level_conv_reg_0_weight, ema_bbox_head_multi_level_conv_reg_0_bias, ema_bbox_head_multi_level_conv_reg_1_weight, ema_bbox_head_multi_level_conv_reg_1_bias, ema_bbox_head_multi_level_conv_reg_2_weight, ema_bbox_head_multi_level_conv_reg_2_bias, ema_bbox_head_multi_level_conv_obj_0_weight, ema_bbox_head_multi_level_conv_obj_0_bias, ema_bbox_head_multi_level_conv_obj_1_weight, ema_bbox_head_multi_level_conv_obj_1_bias, ema_bbox_head_multi_level_conv_obj_2_weight, ema_bbox_head_multi_level_conv_obj_2_bias

2021-10-01 16:32:47,847 - mmdet - INFO - resumed epoch 4, iter 2444
2021-10-01 16:32:47,850 - mmdet - INFO - Start running, host: root@46052755c54b, work_dir: /root/mmdetection/work_dirs/yolox_s_8x8_300e_coco1
2021-10-01 16:32:47,851 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) YOLOXLrUpdaterHook                 
(49          ) ExpMomentumEMAHook                 
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) YOLOXLrUpdaterHook                 
(48          ) YOLOXModeSwitchHook                
(48          ) SyncNormHook                       
(49          ) ExpMomentumEMAHook                 
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) YOLOXLrUpdaterHook                 
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(49          ) ExpMomentumEMAHook                 
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(48          ) SyncRandomSizeHook                 
(48          ) SyncNormHook                       
(49          ) ExpMomentumEMAHook                 
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2021-10-01 16:32:47,851 - mmdet - INFO - workflow: [('train', 1)], max: 300 epochs
2021-10-01 16:33:02,030 - mmcv - INFO - Reducer buckets have been rebuilt in this iteration.
2021-10-01 16:37:59,273 - mmdet - INFO - Epoch [5][50/611]	lr: 6.665e-04, eta: 13 days, 0:41:36, time: 6.226, data_time: 5.685, memory: 4105, loss_cls: 1.2325, loss_bbox: 2.6284, loss_obj: 2.0371, loss: 5.8980
2021-10-01 16:43:07,658 - mmdet - INFO - Epoch [5][100/611]	lr: 6.934e-04, eta: 12 days, 23:09:21, time: 6.168, data_time: 5.524, memory: 4107, loss_cls: 1.1843, loss_bbox: 2.5695, loss_obj: 1.8446, loss: 5.5984
2021-10-01 16:47:53,926 - mmdet - INFO - Epoch [5][150/611]	lr: 7.210e-04, eta: 12 days, 15:10:55, time: 5.726, data_time: 5.182, memory: 4107, loss_cls: 1.2029, loss_bbox: 2.5519, loss_obj: 1.8227, loss: 5.5775
2021-10-01 16:52:35,416 - mmdet - INFO - Epoch [5][200/611]	lr: 7.490e-04, eta: 12 days, 9:57:03, time: 5.630, data_time: 4.932, memory: 4107, loss_cls: 1.1442, loss_bbox: 2.5094, loss_obj: 1.7192, loss: 5.3727
2021-10-01 16:57:17,259 - mmdet - INFO - Epoch [5][250/611]	lr: 7.776e-04, eta: 12 days, 6:51:06, time: 5.637, data_time: 5.147, memory: 4107, loss_cls: 1.1490, loss_bbox: 2.4962, loss_obj: 1.6640, loss: 5.3091
2021-10-01 17:02:00,286 - mmdet - INFO - Epoch [5][300/611]	lr: 8.068e-04, eta: 12 days, 4:57:32, time: 5.661, data_time: 4.999, memory: 4107, loss_cls: 1.1217, loss_bbox: 2.4553, loss_obj: 1.6394, loss: 5.2163
2021-10-01 17:06:44,419 - mmdet - INFO - Epoch [5][350/611]	lr: 8.364e-04, eta: 12 days, 3:44:35, time: 5.683, data_time: 5.127, memory: 4107, loss_cls: 1.1162, loss_bbox: 2.4762, loss_obj: 1.6191, loss: 5.2115
2021-10-01 17:11:25,011 - mmdet - INFO - Epoch [5][400/611]	lr: 8.666e-04, eta: 12 days, 2:22:02, time: 5.612, data_time: 5.107, memory: 4107, loss_cls: 1.1002, loss_bbox: 2.4320, loss_obj: 1.5566, loss: 5.0888
2021-10-01 17:15:50,769 - mmdet - INFO - Epoch [5][450/611]	lr: 8.974e-04, eta: 11 days, 23:37:40, time: 5.315, data_time: 4.777, memory: 4112, loss_cls: 1.0940, loss_bbox: 2.4155, loss_obj: 1.5198, loss: 5.0293
2021-10-01 17:20:12,066 - mmdet - INFO - Epoch [5][500/611]	lr: 9.287e-04, eta: 11 days, 20:58:27, time: 5.226, data_time: 4.692, memory: 4112, loss_cls: 1.0542, loss_bbox: 2.4047, loss_obj: 1.4489, loss: 4.9078
2021-10-01 17:23:59,903 - mmdet - INFO - Epoch [5][550/611]	lr: 9.605e-04, eta: 11 days, 15:44:37, time: 4.557, data_time: 4.094, memory: 4112, loss_cls: 1.0468, loss_bbox: 2.3735, loss_obj: 1.4439, loss: 4.8642
2021-10-01 17:27:30,401 - mmdet - INFO - Epoch [5][600/611]	lr: 9.928e-04, eta: 11 days, 9:55:38, time: 4.210, data_time: 3.772, memory: 4112, loss_cls: 1.0382, loss_bbox: 2.3607, loss_obj: 1.4055, loss: 4.8045
2021-10-01 17:28:18,559 - mmdet - INFO - Saving checkpoint at 5 epochs
2021-10-01 17:31:51,873 - mmdet - INFO - Epoch [6][50/611]	lr: 1.000e-03, eta: 11 days, 0:41:25, time: 4.259, data_time: 3.799, memory: 4112, loss_cls: 1.0265, loss_bbox: 2.3219, loss_obj: 1.2374, loss: 4.5858
2021-10-01 17:35:31,428 - mmdet - INFO - Epoch [6][100/611]	lr: 1.000e-03, eta: 10 days, 21:27:37, time: 4.391, data_time: 3.910, memory: 4112, loss_cls: 1.0126, loss_bbox: 2.3326, loss_obj: 1.2286, loss: 4.5738
2021-10-01 17:39:06,469 - mmdet - INFO - Epoch [6][150/611]	lr: 1.000e-03, eta: 10 days, 18:21:00, time: 4.301, data_time: 3.875, memory: 4112, loss_cls: 1.0116, loss_bbox: 2.3046, loss_obj: 1.1881, loss: 4.5042
2021-10-01 17:42:39,598 - mmdet - INFO - Epoch [6][200/611]	lr: 1.000e-03, eta: 10 days, 15:29:53, time: 4.263, data_time: 3.655, memory: 4112, loss_cls: 0.9753, loss_bbox: 2.2868, loss_obj: 1.1633, loss: 4.4254
2021-10-01 17:46:15,770 - mmdet - INFO - Epoch [6][250/611]	lr: 1.000e-03, eta: 10 days, 13:08:46, time: 4.323, data_time: 3.622, memory: 4112, loss_cls: 0.9897, loss_bbox: 2.2729, loss_obj: 1.1602, loss: 4.4228
2021-10-01 17:49:50,157 - mmdet - INFO - Epoch [6][300/611]	lr: 1.000e-03, eta: 10 days, 10:56:57, time: 4.288, data_time: 3.870, memory: 4112, loss_cls: 0.9683, loss_bbox: 2.2536, loss_obj: 1.1097, loss: 4.3316
2021-10-01 17:53:25,220 - mmdet - INFO - Epoch [6][350/611]	lr: 1.000e-03, eta: 10 days, 9:00:35, time: 4.301, data_time: 3.895, memory: 4112, loss_cls: 0.9584, loss_bbox: 2.2292, loss_obj: 1.0943, loss: 4.2819
2021-10-01 17:57:01,044 - mmdet - INFO - Epoch [6][400/611]	lr: 1.000e-03, eta: 10 days, 7:17:35, time: 4.316, data_time: 3.921, memory: 4112, loss_cls: 0.9406, loss_bbox: 2.2411, loss_obj: 1.0591, loss: 4.2408
2021-10-01 18:00:35,376 - mmdet - INFO - Epoch [6][450/611]	lr: 1.000e-03, eta: 10 days, 5:39:47, time: 4.287, data_time: 3.888, memory: 4112, loss_cls: 0.9540, loss_bbox: 2.2234, loss_obj: 1.0600, loss: 4.2374
2021-10-01 18:04:07,985 - mmdet - INFO - Epoch [6][500/611]	lr: 1.000e-03, eta: 10 days, 4:05:49, time: 4.252, data_time: 3.663, memory: 4112, loss_cls: 0.9365, loss_bbox: 2.2150, loss_obj: 1.0497, loss: 4.2012
2021-10-01 18:07:39,891 - mmdet - INFO - Epoch [6][550/611]	lr: 1.000e-03, eta: 10 days, 2:37:47, time: 4.238, data_time: 3.580, memory: 4112, loss_cls: 0.9380, loss_bbox: 2.1945, loss_obj: 1.0402, loss: 4.1727
2021-10-01 18:11:14,389 - mmdet - INFO - Epoch [6][600/611]	lr: 1.000e-03, eta: 10 days, 1:23:10, time: 4.290, data_time: 3.857, memory: 4112, loss_cls: 0.9344, loss_bbox: 2.2086, loss_obj: 1.0077, loss: 4.1507
2021-10-01 18:12:01,518 - mmdet - INFO - Saving checkpoint at 6 epochs
2021-10-01 18:15:39,256 - mmdet - INFO - Epoch [7][50/611]	lr: 1.000e-03, eta: 9 days, 22:15:25, time: 4.348, data_time: 3.940, memory: 4112, loss_cls: 0.9469, loss_bbox: 2.2168, loss_obj: 0.9506, loss: 4.1143
2021-10-01 18:19:12,874 - mmdet - INFO - Epoch [7][100/611]	lr: 1.000e-03, eta: 9 days, 21:14:25, time: 4.272, data_time: 3.824, memory: 4112, loss_cls: 0.9305, loss_bbox: 2.2040, loss_obj: 0.9392, loss: 4.0737
2021-10-01 18:22:46,617 - mmdet - INFO - Epoch [7][150/611]	lr: 1.000e-03, eta: 9 days, 20:17:53, time: 4.275, data_time: 3.798, memory: 4112, loss_cls: 0.9444, loss_bbox: 2.1909, loss_obj: 0.9501, loss: 4.0854
2021-10-01 18:26:14,690 - mmdet - INFO - Epoch [7][200/611]	lr: 9.999e-04, eta: 9 days, 19:13:07, time: 4.161, data_time: 3.561, memory: 4112, loss_cls: 0.9279, loss_bbox: 2.2009, loss_obj: 0.9112, loss: 4.0400
2021-10-01 18:29:44,974 - mmdet - INFO - Epoch [7][250/611]	lr: 9.999e-04, eta: 9 days, 18:17:03, time: 4.206, data_time: 3.620, memory: 4112, loss_cls: 0.9387, loss_bbox: 2.2028, loss_obj: 0.9246, loss: 4.0662
2021-10-01 18:33:08,102 - mmdet - INFO - Epoch [7][300/611]	lr: 9.999e-04, eta: 9 days, 17:10:22, time: 4.063, data_time: 3.712, memory: 4112, loss_cls: 0.9132, loss_bbox: 2.1671, loss_obj: 0.9072, loss: 3.9875
2021-10-01 18:36:43,514 - mmdet - INFO - Epoch [7][350/611]	lr: 9.999e-04, eta: 9 days, 16:31:03, time: 4.308, data_time: 3.906, memory: 4112, loss_cls: 0.8955, loss_bbox: 2.1515, loss_obj: 0.8728, loss: 3.9197
2021-10-01 18:40:17,654 - mmdet - INFO - Epoch [7][400/611]	lr: 9.999e-04, eta: 9 days, 15:51:33, time: 4.282, data_time: 3.832, memory: 4112, loss_cls: 0.9124, loss_bbox: 2.1537, loss_obj: 0.8844, loss: 3.9505
2021-10-01 18:43:50,931 - mmdet - INFO - Epoch [7][450/611]	lr: 9.999e-04, eta: 9 days, 15:12:44, time: 4.266, data_time: 3.726, memory: 4112, loss_cls: 0.9094, loss_bbox: 2.1637, loss_obj: 0.8906, loss: 3.9638
2021-10-01 18:47:24,449 - mmdet - INFO - Epoch [7][500/611]	lr: 9.999e-04, eta: 9 days, 14:36:23, time: 4.271, data_time: 3.839, memory: 4112, loss_cls: 0.9036, loss_bbox: 2.1386, loss_obj: 0.8709, loss: 3.9131
2021-10-01 18:51:00,025 - mmdet - INFO - Epoch [7][550/611]	lr: 9.999e-04, eta: 9 days, 14:05:19, time: 4.311, data_time: 3.721, memory: 4112, loss_cls: 0.8829, loss_bbox: 2.1298, loss_obj: 0.8498, loss: 3.8625
2021-10-01 18:54:33,729 - mmdet - INFO - Epoch [7][600/611]	lr: 9.999e-04, eta: 9 days, 13:32:42, time: 4.274, data_time: 3.747, memory: 4112, loss_cls: 0.8909, loss_bbox: 2.1500, loss_obj: 0.8685, loss: 3.9094
2021-10-01 18:55:21,043 - mmdet - INFO - Saving checkpoint at 7 epochs
2021-10-01 18:59:33,235 - mmdet - INFO - Epoch [8][50/611]	lr: 9.999e-04, eta: 9 days, 12:40:52, time: 5.036, data_time: 4.487, memory: 5341, loss_cls: 0.8989, loss_bbox: 2.1927, loss_obj: 1.1649, loss: 4.2565
2021-10-01 19:04:09,804 - mmdet - INFO - Epoch [8][100/611]	lr: 9.999e-04, eta: 9 days, 13:48:52, time: 5.531, data_time: 4.984, memory: 5346, loss_cls: 0.8492, loss_bbox: 2.1297, loss_obj: 1.0684, loss: 4.0472
2021-10-01 19:08:50,364 - mmdet - INFO - Epoch [8][150/611]	lr: 9.998e-04, eta: 9 days, 14:59:15, time: 5.611, data_time: 5.109, memory: 5349, loss_cls: 0.8974, loss_bbox: 2.1672, loss_obj: 1.0766, loss: 4.1413
2021-10-01 19:13:29,378 - mmdet - INFO - Epoch [8][200/611]	lr: 9.998e-04, eta: 9 days, 16:03:38, time: 5.580, data_time: 5.055, memory: 5349, loss_cls: 0.8599, loss_bbox: 2.1301, loss_obj: 1.0713, loss: 4.0613
2021-10-01 19:18:04,804 - mmdet - INFO - Epoch [8][250/611]	lr: 9.998e-04, eta: 9 days, 16:59:35, time: 5.508, data_time: 4.978, memory: 5349, loss_cls: 0.8457, loss_bbox: 2.1052, loss_obj: 1.0052, loss: 3.9560
2021-10-01 19:22:38,692 - mmdet - INFO - Epoch [8][300/611]	lr: 9.998e-04, eta: 9 days, 17:50:31, time: 5.477, data_time: 4.975, memory: 5349, loss_cls: 0.8405, loss_bbox: 2.1024, loss_obj: 0.9934, loss: 3.9363
2021-10-01 19:27:11,686 - mmdet - INFO - Epoch [8][350/611]	lr: 9.998e-04, eta: 9 days, 18:37:45, time: 5.460, data_time: 4.968, memory: 5349, loss_cls: 0.8521, loss_bbox: 2.0885, loss_obj: 0.9897, loss: 3.9303
2021-10-01 19:31:47,422 - mmdet - INFO - Epoch [8][400/611]	lr: 9.998e-04, eta: 9 days, 19:26:17, time: 5.514, data_time: 4.984, memory: 5349, loss_cls: 0.8477, loss_bbox: 2.0783, loss_obj: 0.9649, loss: 3.8910
2021-10-01 19:36:23,103 - mmdet - INFO - Epoch [8][450/611]	lr: 9.998e-04, eta: 9 days, 20:12:26, time: 5.514, data_time: 4.984, memory: 5350, loss_cls: 0.8417, loss_bbox: 2.0896, loss_obj: 0.9712, loss: 3.9025
2021-10-01 19:40:24,266 - mmdet - INFO - Epoch [8][500/611]	lr: 9.998e-04, eta: 9 days, 20:12:23, time: 4.823, data_time: 4.314, memory: 5350, loss_cls: 0.8203, loss_bbox: 2.0811, loss_obj: 0.9390, loss: 3.8404
2021-10-01 19:44:20,818 - mmdet - INFO - Epoch [8][550/611]	lr: 9.997e-04, eta: 9 days, 20:06:24, time: 4.731, data_time: 4.241, memory: 5350, loss_cls: 0.8257, loss_bbox: 2.0373, loss_obj: 0.9517, loss: 3.8147
2021-10-01 19:48:16,779 - mmdet - INFO - Epoch [8][600/611]	lr: 9.997e-04, eta: 9 days, 19:59:46, time: 4.719, data_time: 4.186, memory: 5350, loss_cls: 0.8360, loss_bbox: 2.0424, loss_obj: 0.9505, loss: 3.8289
2021-10-01 19:49:10,441 - mmdet - INFO - Saving checkpoint at 8 epochs
2021-10-01 19:52:49,782 - mmdet - INFO - Epoch [9][50/611]	lr: 9.997e-04, eta: 9 days, 18:29:40, time: 4.378, data_time: 3.982, memory: 5350, loss_cls: 0.9524, loss_bbox: 2.2321, loss_obj: 0.8304, loss: 4.0149
2021-10-01 19:56:28,228 - mmdet - INFO - Epoch [9][100/611]	lr: 9.997e-04, eta: 9 days, 18:04:28, time: 4.369, data_time: 3.961, memory: 5350, loss_cls: 0.9395, loss_bbox: 2.1874, loss_obj: 0.8011, loss: 3.9279
2021-10-01 20:00:08,313 - mmdet - INFO - Epoch [9][150/611]	lr: 9.997e-04, eta: 9 days, 17:41:57, time: 4.402, data_time: 3.952, memory: 5350, loss_cls: 0.9199, loss_bbox: 2.1750, loss_obj: 0.7921, loss: 3.8870
2021-10-01 20:03:49,078 - mmdet - INFO - Epoch [9][200/611]	lr: 9.997e-04, eta: 9 days, 17:20:55, time: 4.415, data_time: 3.936, memory: 5350, loss_cls: 0.9091, loss_bbox: 2.1511, loss_obj: 0.7772, loss: 3.8373
2021-10-01 20:07:30,646 - mmdet - INFO - Epoch [9][250/611]	lr: 9.997e-04, eta: 9 days, 17:01:26, time: 4.432, data_time: 3.991, memory: 5350, loss_cls: 0.9218, loss_bbox: 2.1405, loss_obj: 0.7762, loss: 3.8386
2021-10-01 20:11:11,084 - mmdet - INFO - Epoch [9][300/611]	lr: 9.996e-04, eta: 9 days, 16:41:18, time: 4.409, data_time: 4.045, memory: 5350, loss_cls: 0.9050, loss_bbox: 2.1276, loss_obj: 0.7562, loss: 3.7888
2021-10-01 20:14:50,965 - mmdet - INFO - Epoch [9][350/611]	lr: 9.996e-04, eta: 9 days, 16:21:09, time: 4.398, data_time: 4.010, memory: 5350, loss_cls: 0.8991, loss_bbox: 2.1278, loss_obj: 0.7612, loss: 3.7881
2021-10-01 20:18:30,147 - mmdet - INFO - Epoch [9][400/611]	lr: 9.996e-04, eta: 9 days, 16:00:52, time: 4.384, data_time: 3.979, memory: 5350, loss_cls: 0.8880, loss_bbox: 2.1323, loss_obj: 0.7636, loss: 3.7838
2021-10-01 20:22:09,012 - mmdet - INFO - Epoch [9][450/611]	lr: 9.996e-04, eta: 9 days, 15:40:49, time: 4.377, data_time: 4.028, memory: 5350, loss_cls: 0.8903, loss_bbox: 2.1215, loss_obj: 0.7686, loss: 3.7805
2021-10-01 20:25:54,133 - mmdet - INFO - Epoch [9][500/611]	lr: 9.996e-04, eta: 9 days, 15:27:38, time: 4.502, data_time: 4.076, memory: 5350, loss_cls: 0.8786, loss_bbox: 2.0975, loss_obj: 0.7472, loss: 3.7232
2021-10-01 20:29:34,875 - mmdet - INFO - Epoch [9][550/611]	lr: 9.995e-04, eta: 9 days, 15:10:26, time: 4.415, data_time: 4.006, memory: 5350, loss_cls: 0.8969, loss_bbox: 2.1432, loss_obj: 0.7675, loss: 3.8076
2021-10-01 20:33:20,523 - mmdet - INFO - Epoch [9][600/611]	lr: 9.995e-04, eta: 9 days, 14:58:26, time: 4.513, data_time: 4.169, memory: 5350, loss_cls: 0.8751, loss_bbox: 2.1130, loss_obj: 0.7406, loss: 3.7287
2021-10-01 20:34:10,913 - mmdet - INFO - Saving checkpoint at 9 epochs
/root/mmdetection/mmdet/core/bbox/assigners/sim_ota_assigner.py:73: UserWarning: OOM RuntimeError is raised due to the huge memory cost during label assignment. CPU mode is applied in this batch. If you want to avoid this issue, try to reduce the batch size or image size.
  warnings.warn('OOM RuntimeError is raised due to the huge memory '
/root/mmdetection/mmdet/core/bbox/assigners/sim_ota_assigner.py:73: UserWarning: OOM RuntimeError is raised due to the huge memory cost during label assignment. CPU mode is applied in this batch. If you want to avoid this issue, try to reduce the batch size or image size.
  warnings.warn('OOM RuntimeError is raised due to the huge memory '
Traceback (most recent call last):
  File "./tools/train.py", line 189, in <module>
    main()
  File "./tools/train.py", line 185, in main
    meta=meta)
  File "/root/mmdetection/mmdet/apis/train.py", line 174, in train_detector
    runner.run(data_loaders, cfg.workflow)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 127, in run
    epoch_runner(data_loaders[i], **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 50, in train
    self.run_iter(data_batch, train_mode=True, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 30, in run_iter
    **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/parallel/distributed.py", line 51, in train_step
    output = self.module.train_step(*inputs[0], **kwargs[0])
  File "/root/mmdetection/mmdet/models/detectors/base.py", line 238, in train_step
    losses = self(**data)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/fp16_utils.py", line 97, in new_func
    return old_func(*args, **kwargs)
  File "/root/mmdetection/mmdet/models/detectors/base.py", line 172, in forward
    return self.forward_train(img, img_metas, **kwargs)
  File "/root/mmdetection/mmdet/models/detectors/single_stage.py", line 84, in forward_train
    gt_labels, gt_bboxes_ignore)
  File "/root/mmdetection/mmdet/models/dense_heads/base_dense_head.py", line 55, in forward_train
    losses = self.loss(*loss_inputs, gt_bboxes_ignore=gt_bboxes_ignore)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/fp16_utils.py", line 184, in new_func
    return old_func(*args, **kwargs)
  File "/root/mmdetection/mmdet/models/dense_heads/yolox_head.py", line 392, in loss
    obj_targets) / num_total_samples
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/mmdetection/mmdet/models/losses/cross_entropy_loss.py", line 250, in forward
    **kwargs)
  File "/root/mmdetection/mmdet/models/losses/cross_entropy_loss.py", line 108, in binary_cross_entropy
    pred, label.float(), pos_weight=class_weight, reduction='none')
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/functional.py", line 2960, in binary_cross_entropy_with_logits
    return torch.binary_cross_entropy_with_logits(input, target, weight, pos_weight, reduction_enum)
RuntimeError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 2; 10.92 GiB total capacity; 6.57 GiB already allocated; 4.00 MiB free; 6.91 GiB reserved in total by PyTorch)
Traceback (most recent call last):
  File "./tools/train.py", line 189, in <module>
    main()
  File "./tools/train.py", line 185, in main
    meta=meta)
  File "/root/mmdetection/mmdet/apis/train.py", line 174, in train_detector
    runner.run(data_loaders, cfg.workflow)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 127, in run
    epoch_runner(data_loaders[i], **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 50, in train
    self.run_iter(data_batch, train_mode=True, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 30, in run_iter
    **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/parallel/distributed.py", line 51, in train_step
    output = self.module.train_step(*inputs[0], **kwargs[0])
  File "/root/mmdetection/mmdet/models/detectors/base.py", line 238, in train_step
    losses = self(**data)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/fp16_utils.py", line 97, in new_func
    return old_func(*args, **kwargs)
  File "/root/mmdetection/mmdet/models/detectors/base.py", line 172, in forward
    return self.forward_train(img, img_metas, **kwargs)
  File "/root/mmdetection/mmdet/models/detectors/single_stage.py", line 84, in forward_train
    gt_labels, gt_bboxes_ignore)
  File "/root/mmdetection/mmdet/models/dense_heads/base_dense_head.py", line 55, in forward_train
    losses = self.loss(*loss_inputs, gt_bboxes_ignore=gt_bboxes_ignore)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/fp16_utils.py", line 184, in new_func
    return old_func(*args, **kwargs)
  File "/root/mmdetection/mmdet/models/dense_heads/yolox_head.py", line 392, in loss
    obj_targets) / num_total_samples
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/mmdetection/mmdet/models/losses/cross_entropy_loss.py", line 250, in forward
    **kwargs)
  File "/root/mmdetection/mmdet/models/losses/cross_entropy_loss.py", line 108, in binary_cross_entropy
    pred, label.float(), pos_weight=class_weight, reduction='none')
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/functional.py", line 2960, in binary_cross_entropy_with_logits
    return torch.binary_cross_entropy_with_logits(input, target, weight, pos_weight, reduction_enum)
RuntimeError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 1; 10.92 GiB total capacity; 6.57 GiB already allocated; 4.00 MiB free; 6.91 GiB reserved in total by PyTorch)
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 1 (pid: 24263) of binary: /root/anaconda3/envs/openmmlab/bin/python
Traceback (most recent call last):
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launch.py", line 193, in <module>
    main()
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launch.py", line 189, in main
    launch(args)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launch.py", line 174, in launch
    run(args)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/run.py", line 692, in run
    )(*cmd_args)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launcher/api.py", line 116, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launcher/api.py", line 246, in launch_agent
    failures=result.failures,
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
***************************************
        ./tools/train.py FAILED        
=======================================
Root Cause:
[0]:
  time: 2021-10-01_20:34:31
  rank: 1 (local_rank: 1)
  exitcode: 1 (pid: 24263)
  error_file: <N/A>
  msg: "Process failed with exitcode 1"
=======================================
Other Failures:
[1]:
  time: 2021-10-01_20:34:31
  rank: 2 (local_rank: 2)
  exitcode: 1 (pid: 24264)
  error_file: <N/A>
  msg: "Process failed with exitcode 1"
***************************************

