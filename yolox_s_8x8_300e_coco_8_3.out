/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launch.py:186: FutureWarning: The module torch.distributed.launch is deprecated
and will be removed in future. Use torch.distributed.run.
Note that --use_env is set by default in torch.distributed.run.
If your script expects `--local_rank` argument to be set, please
change it to read from `os.environ['LOCAL_RANK']` instead. See 
https://pytorch.org/docs/stable/distributed.html#launch-utility for 
further instructions

  FutureWarning,
WARNING:torch.distributed.run:*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
fatal: not a git repository (or any of the parent directories): .git
fatal: not a git repository (or any of the parent directories): .git
2021-09-29 17:45:49,395 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]
CUDA available: True
GPU 0,1,2: GeForce GTX 1080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.9.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.10.1
OpenCV: 4.5.3
MMCV: 1.3.8
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 10.1
MMDetection: 2.16.0+
------------------------------------------------------------

fatal: not a git repository (or any of the parent directories): .git
2021-09-29 17:45:50,215 - mmdet - INFO - Distributed training: True
2021-09-29 17:45:51,094 - mmdet - INFO - Config:
optimizer = dict(
    type='SGD',
    lr=0.001,
    momentum=0.9,
    weight_decay=0.0005,
    nesterov=True,
    paramwise_cfg=dict(norm_decay_mult=0.0, bias_decay_mult=0.0))
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='YOLOX',
    warmup='exp',
    by_epoch=False,
    warmup_by_epoch=True,
    warmup_ratio=1,
    warmup_iters=5,
    num_last_epochs=15,
    min_lr_ratio=0.05)
runner = dict(type='EpochBasedRunner', max_epochs=300)
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [
    dict(type='YOLOXModeSwitchHook', num_last_epochs=15, priority=48),
    dict(
        type='SyncRandomSizeHook',
        ratio_range=(14, 26),
        img_scale=(640, 640),
        priority=48),
    dict(type='SyncNormHook', num_last_epochs=15, interval=10, priority=48),
    dict(type='ExpMomentumEMAHook', resume_from=None, priority=49)
]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
model = dict(
    type='YOLOX',
    backbone=dict(type='CSPDarknet', deepen_factor=0.33, widen_factor=0.5),
    neck=dict(
        type='YOLOXPAFPN',
        in_channels=[128, 256, 512],
        out_channels=128,
        num_csp_blocks=1),
    bbox_head=dict(
        type='YOLOXHead', num_classes=10, in_channels=128, feat_channels=128),
    train_cfg=dict(assigner=dict(type='SimOTAAssigner', center_radius=2.5)),
    test_cfg=dict(score_thr=0.01, nms=dict(type='nms', iou_threshold=0.65)))
data_root = '/ayb/UVM_Datasets/'
dataset_type = 'CocoDataset'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
img_scale = (640, 640)
train_pipeline = [
    dict(type='Mosaic', img_scale=(640, 640), pad_val=114.0),
    dict(
        type='RandomAffine', scaling_ratio_range=(0.1, 2),
        border=(-320, -320)),
    dict(
        type='MixUp',
        img_scale=(640, 640),
        ratio_range=(0.8, 1.6),
        pad_val=114.0),
    dict(
        type='PhotoMetricDistortion',
        brightness_delta=32,
        contrast_range=(0.5, 1.5),
        saturation_range=(0.5, 1.5),
        hue_delta=18),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(type='Resize', keep_ratio=True),
    dict(type='Pad', pad_to_square=True, pad_val=114.0),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
train_dataset = dict(
    type='MultiImageMixDataset',
    dataset=dict(
        type='CocoDataset',
        ann_file='/ayb/UVM_Datasets/voc_train3.json',
        img_prefix='/ayb/UVM_Datasets/voc8/VOCdevkit/VOC2007/JPEGImages',
        pipeline=[
            dict(type='LoadImageFromFile', to_float32=True),
            dict(type='LoadAnnotations', with_bbox=True)
        ],
        filter_empty_gt=False),
    pipeline=[
        dict(type='Mosaic', img_scale=(640, 640), pad_val=114.0),
        dict(
            type='RandomAffine',
            scaling_ratio_range=(0.1, 2),
            border=(-320, -320)),
        dict(
            type='MixUp',
            img_scale=(640, 640),
            ratio_range=(0.8, 1.6),
            pad_val=114.0),
        dict(
            type='PhotoMetricDistortion',
            brightness_delta=32,
            contrast_range=(0.5, 1.5),
            saturation_range=(0.5, 1.5),
            hue_delta=18),
        dict(type='RandomFlip', flip_ratio=0.5),
        dict(type='Resize', keep_ratio=True),
        dict(type='Pad', pad_to_square=True, pad_val=114.0),
        dict(
            type='Normalize',
            mean=[123.675, 116.28, 103.53],
            std=[58.395, 57.12, 57.375],
            to_rgb=True),
        dict(type='DefaultFormatBundle'),
        dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
    ],
    dynamic_scale=(640, 640))
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(640, 640),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(type='Pad', size=(640, 640), pad_val=114.0),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=8,
    workers_per_gpu=0,
    train=dict(
        type='MultiImageMixDataset',
        dataset=dict(
            type='CocoDataset',
            ann_file='/ayb/UVM_Datasets/voc_train3.json',
            img_prefix='/ayb/UVM_Datasets/voc8/VOCdevkit/VOC2007/JPEGImages',
            pipeline=[
                dict(type='LoadImageFromFile', to_float32=True),
                dict(type='LoadAnnotations', with_bbox=True)
            ],
            filter_empty_gt=False),
        pipeline=[
            dict(type='Mosaic', img_scale=(640, 640), pad_val=114.0),
            dict(
                type='RandomAffine',
                scaling_ratio_range=(0.1, 2),
                border=(-320, -320)),
            dict(
                type='MixUp',
                img_scale=(640, 640),
                ratio_range=(0.8, 1.6),
                pad_val=114.0),
            dict(
                type='PhotoMetricDistortion',
                brightness_delta=32,
                contrast_range=(0.5, 1.5),
                saturation_range=(0.5, 1.5),
                hue_delta=18),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(type='Resize', keep_ratio=True),
            dict(type='Pad', pad_to_square=True, pad_val=114.0),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ],
        dynamic_scale=(640, 640)),
    val=dict(
        type='CocoDataset',
        ann_file='/ayb/UVM_Datasets/voc_valid3.json',
        img_prefix='/ayb/UVM_Datasets/voc8/VOCdevkit/VOC2007/JPEGImages',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(640, 640),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(type='Pad', size=(640, 640), pad_val=114.0),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='DefaultFormatBundle'),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='/ayb/UVM_Datasets/voc_test3.json',
        img_prefix='/ayb/UVM_Datasets/voc8/VOCdevkit/VOC2007/JPEGImages',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(640, 640),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(type='Pad', size=(640, 640), pad_val=114.0),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='DefaultFormatBundle'),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
interval = 10
evaluation = dict(interval=10, metric='bbox')
work_dir = './work_dirs/yolox_s_8x8_300e_coco1'
gpu_ids = range(0, 3)

loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
Done (t=0.59s)
creating index...
Done (t=0.59s)
creating index...
Done (t=0.60s)
creating index...
index created!
index created!
index created!
fatal: not a git repository (or any of the parent directories): .git
fatal: not a git repository (or any of the parent directories): .git
fatal: not a git repository (or any of the parent directories): .git
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
Done (t=0.65s)
creating index...
Done (t=0.69s)
creating index...
Done (t=0.70s)
creating index...
index created!
index created!
index created!
/root/mmdetection/mmdet/core/hook/sync_random_size_hook.py:38: UserWarning: DeprecationWarning: SyncRandomSizeHook is deprecated. Please use Resize pipeline to achieve similar functions. Due to the multi-process dataloader, its behavior is different from YOLOX's official implementation, the official is to change the size every fixed iteration interval and what we achieved is a fixed epoch interval.
  warnings.warn('DeprecationWarning: SyncRandomSizeHook is deprecated. '
/root/mmdetection/mmdet/core/hook/sync_random_size_hook.py:38: UserWarning: DeprecationWarning: SyncRandomSizeHook is deprecated. Please use Resize pipeline to achieve similar functions. Due to the multi-process dataloader, its behavior is different from YOLOX's official implementation, the official is to change the size every fixed iteration interval and what we achieved is a fixed epoch interval.
  warnings.warn('DeprecationWarning: SyncRandomSizeHook is deprecated. '
2021-09-29 17:45:57,994 - mmdet - INFO - Start running, host: root@46052755c54b, work_dir: /root/mmdetection/work_dirs/yolox_s_8x8_300e_coco1
2021-09-29 17:45:57,995 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) YOLOXLrUpdaterHook                 
(49          ) ExpMomentumEMAHook                 
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) YOLOXLrUpdaterHook                 
(48          ) YOLOXModeSwitchHook                
(48          ) SyncNormHook                       
(49          ) ExpMomentumEMAHook                 
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) YOLOXLrUpdaterHook                 
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(49          ) ExpMomentumEMAHook                 
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(48          ) SyncRandomSizeHook                 
(48          ) SyncNormHook                       
(49          ) ExpMomentumEMAHook                 
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2021-09-29 17:45:58,002 - mmdet - INFO - workflow: [('train', 1)], max: 300 epochs
/root/mmdetection/mmdet/core/hook/sync_random_size_hook.py:38: UserWarning: DeprecationWarning: SyncRandomSizeHook is deprecated. Please use Resize pipeline to achieve similar functions. Due to the multi-process dataloader, its behavior is different from YOLOX's official implementation, the official is to change the size every fixed iteration interval and what we achieved is a fixed epoch interval.
  warnings.warn('DeprecationWarning: SyncRandomSizeHook is deprecated. '
2021-09-29 17:46:08,651 - mmcv - INFO - Reducer buckets have been rebuilt in this iteration.
2021-09-29 17:49:25,546 - mmdet - INFO - Epoch [1][50/611]	lr: 2.679e-07, eta: 8 days, 19:11:21, time: 4.149, data_time: 3.707, memory: 4107, loss_cls: 1.2262, loss_bbox: 4.6380, loss_obj: 11.0110, loss: 16.8751
2021-09-29 17:52:47,210 - mmdet - INFO - Epoch [1][100/611]	lr: 1.071e-06, eta: 8 days, 16:11:37, time: 4.033, data_time: 3.614, memory: 4109, loss_cls: 1.2202, loss_bbox: 4.6401, loss_obj: 11.4419, loss: 17.3022
2021-09-29 17:56:04,224 - mmdet - INFO - Epoch [1][150/611]	lr: 2.411e-06, eta: 8 days, 13:34:43, time: 3.940, data_time: 3.564, memory: 4109, loss_cls: 1.2436, loss_bbox: 4.6223, loss_obj: 10.8072, loss: 16.6731
2021-09-29 17:59:30,157 - mmdet - INFO - Epoch [1][200/611]	lr: 4.286e-06, eta: 8 days, 14:30:37, time: 4.119, data_time: 3.629, memory: 4109, loss_cls: 1.2832, loss_bbox: 4.5956, loss_obj: 10.7169, loss: 16.5957
2021-09-29 18:03:07,664 - mmdet - INFO - Epoch [1][250/611]	lr: 6.697e-06, eta: 8 days, 17:24:09, time: 4.350, data_time: 3.807, memory: 4109, loss_cls: 1.3111, loss_bbox: 4.5820, loss_obj: 10.3884, loss: 16.2815
2021-09-29 18:06:42,986 - mmdet - INFO - Epoch [1][300/611]	lr: 9.643e-06, eta: 8 days, 18:56:22, time: 4.306, data_time: 3.855, memory: 4109, loss_cls: 1.3868, loss_bbox: 4.5302, loss_obj: 9.7570, loss: 15.6741
2021-09-29 18:10:20,557 - mmdet - INFO - Epoch [1][350/611]	lr: 1.313e-05, eta: 8 days, 20:20:48, time: 4.351, data_time: 3.875, memory: 4110, loss_cls: 1.4860, loss_bbox: 4.4471, loss_obj: 8.9417, loss: 14.8749
2021-09-29 18:14:08,708 - mmdet - INFO - Epoch [1][400/611]	lr: 1.714e-05, eta: 8 days, 22:43:50, time: 4.563, data_time: 3.989, memory: 4110, loss_cls: 1.5990, loss_bbox: 4.3414, loss_obj: 8.2621, loss: 14.2025
2021-09-29 18:17:58,780 - mmdet - INFO - Epoch [1][450/611]	lr: 2.170e-05, eta: 9 days, 0:47:16, time: 4.601, data_time: 4.009, memory: 4110, loss_cls: 1.6556, loss_bbox: 4.2723, loss_obj: 7.6490, loss: 13.5770
2021-09-29 18:22:02,838 - mmdet - INFO - Epoch [1][500/611]	lr: 2.679e-05, eta: 9 days, 3:50:26, time: 4.881, data_time: 4.346, memory: 4110, loss_cls: 1.7196, loss_bbox: 4.2060, loss_obj: 7.2402, loss: 13.1658
2021-09-29 18:26:03,691 - mmdet - INFO - Epoch [1][550/611]	lr: 3.241e-05, eta: 9 days, 6:01:48, time: 4.817, data_time: 4.282, memory: 4110, loss_cls: 1.7981, loss_bbox: 4.1020, loss_obj: 6.5820, loss: 12.4821
2021-09-29 18:30:05,663 - mmdet - INFO - Epoch [1][600/611]	lr: 3.857e-05, eta: 9 days, 7:56:21, time: 4.840, data_time: 4.360, memory: 4110, loss_cls: 1.8495, loss_bbox: 4.0118, loss_obj: 6.0802, loss: 11.9414
2021-09-29 18:30:58,891 - mmdet - INFO - Saving checkpoint at 1 epochs
2021-09-29 18:35:13,629 - mmdet - INFO - Epoch [2][50/611]	lr: 4.681e-05, eta: 9 days, 6:43:41, time: 5.087, data_time: 4.507, memory: 4110, loss_cls: 1.8989, loss_bbox: 3.8918, loss_obj: 5.3756, loss: 11.1663
2021-09-29 18:39:29,275 - mmdet - INFO - Epoch [2][100/611]	lr: 5.416e-05, eta: 9 days, 9:14:42, time: 5.113, data_time: 4.615, memory: 4110, loss_cls: 1.9318, loss_bbox: 3.7912, loss_obj: 4.9898, loss: 10.7128
2021-09-29 18:43:54,554 - mmdet - INFO - Epoch [2][150/611]	lr: 6.205e-05, eta: 9 days, 12:03:47, time: 5.305, data_time: 4.586, memory: 4110, loss_cls: 1.9507, loss_bbox: 3.6891, loss_obj: 4.6938, loss: 10.3336
2021-09-29 18:48:20,743 - mmdet - INFO - Epoch [2][200/611]	lr: 7.047e-05, eta: 9 days, 14:34:52, time: 5.324, data_time: 4.676, memory: 4110, loss_cls: 1.9816, loss_bbox: 3.6002, loss_obj: 4.4220, loss: 10.0038
2021-09-29 18:52:42,681 - mmdet - INFO - Epoch [2][250/611]	lr: 7.943e-05, eta: 9 days, 16:32:57, time: 5.239, data_time: 4.585, memory: 4110, loss_cls: 1.9914, loss_bbox: 3.5245, loss_obj: 4.2359, loss: 9.7518
2021-09-29 18:57:06,612 - mmdet - INFO - Epoch [2][300/611]	lr: 8.892e-05, eta: 9 days, 18:24:12, time: 5.279, data_time: 4.637, memory: 4110, loss_cls: 1.9977, loss_bbox: 3.4466, loss_obj: 4.0881, loss: 9.5325
2021-09-29 19:01:25,049 - mmdet - INFO - Epoch [2][350/611]	lr: 9.895e-05, eta: 9 days, 19:46:04, time: 5.169, data_time: 4.599, memory: 4110, loss_cls: 1.9702, loss_bbox: 3.3939, loss_obj: 3.8905, loss: 9.2546
2021-09-29 19:05:48,374 - mmdet - INFO - Epoch [2][400/611]	lr: 1.095e-04, eta: 9 days, 21:14:05, time: 5.267, data_time: 4.718, memory: 4110, loss_cls: 1.9664, loss_bbox: 3.3129, loss_obj: 3.8255, loss: 9.1048
2021-09-29 19:11:42,962 - mmdet - INFO - Epoch [2][450/611]	lr: 1.206e-04, eta: 10 days, 2:54:40, time: 7.092, data_time: 6.342, memory: 4110, loss_cls: 1.9395, loss_bbox: 3.2868, loss_obj: 3.7505, loss: 8.9768
2021-09-29 19:17:54,802 - mmdet - INFO - Epoch [2][500/611]	lr: 1.323e-04, eta: 10 days, 8:51:09, time: 7.436, data_time: 6.593, memory: 4110, loss_cls: 1.9270, loss_bbox: 3.2354, loss_obj: 3.6504, loss: 8.8128
2021-09-29 19:24:09,811 - mmdet - INFO - Epoch [2][550/611]	lr: 1.444e-04, eta: 10 days, 14:24:45, time: 7.500, data_time: 6.781, memory: 4110, loss_cls: 1.9035, loss_bbox: 3.1989, loss_obj: 3.5021, loss: 8.6045
2021-09-29 19:30:22,235 - mmdet - INFO - Epoch [2][600/611]	lr: 1.571e-04, eta: 10 days, 19:23:47, time: 7.448, data_time: 6.662, memory: 4110, loss_cls: 1.8780, loss_bbox: 3.1890, loss_obj: 3.5184, loss: 8.5854
2021-09-29 19:31:41,167 - mmdet - INFO - Saving checkpoint at 2 epochs
2021-09-29 19:37:51,917 - mmdet - INFO - Epoch [3][50/611]	lr: 1.734e-04, eta: 10 days, 21:35:21, time: 7.404, data_time: 6.596, memory: 4110, loss_cls: 1.8482, loss_bbox: 3.1390, loss_obj: 3.3453, loss: 8.3325
2021-09-29 19:44:07,468 - mmdet - INFO - Epoch [3][100/611]	lr: 1.873e-04, eta: 11 days, 1:59:10, time: 7.511, data_time: 6.763, memory: 4110, loss_cls: 1.8160, loss_bbox: 3.1131, loss_obj: 3.2293, loss: 8.1585
2021-09-29 19:50:10,316 - mmdet - INFO - Epoch [3][150/611]	lr: 2.017e-04, eta: 11 days, 5:35:14, time: 7.257, data_time: 6.460, memory: 4110, loss_cls: 1.7802, loss_bbox: 3.0788, loss_obj: 3.2052, loss: 8.0641
2021-09-29 19:54:45,995 - mmdet - INFO - Epoch [3][200/611]	lr: 2.167e-04, eta: 11 days, 5:49:52, time: 5.514, data_time: 4.931, memory: 4110, loss_cls: 1.7380, loss_bbox: 3.0779, loss_obj: 3.1795, loss: 7.9954
2021-09-29 19:59:14,539 - mmdet - INFO - Epoch [3][250/611]	lr: 2.322e-04, eta: 11 days, 5:48:30, time: 5.371, data_time: 4.781, memory: 4110, loss_cls: 1.6965, loss_bbox: 3.0534, loss_obj: 3.0826, loss: 7.8325
2021-09-29 20:04:32,098 - mmdet - INFO - Epoch [3][300/611]	lr: 2.482e-04, eta: 11 days, 7:24:30, time: 6.351, data_time: 5.683, memory: 4110, loss_cls: 1.6600, loss_bbox: 3.0244, loss_obj: 2.9839, loss: 7.6683
2021-09-29 20:10:34,141 - mmdet - INFO - Epoch [3][350/611]	lr: 2.648e-04, eta: 11 days, 10:19:45, time: 7.241, data_time: 6.479, memory: 4110, loss_cls: 1.6497, loss_bbox: 3.0001, loss_obj: 2.9126, loss: 7.5625
2021-09-29 20:17:12,444 - mmdet - INFO - Epoch [3][400/611]	lr: 2.819e-04, eta: 11 days, 14:11:32, time: 7.966, data_time: 7.142, memory: 4110, loss_cls: 1.6016, loss_bbox: 2.9855, loss_obj: 2.8099, loss: 7.3970
2021-09-29 20:23:14,616 - mmdet - INFO - Epoch [3][450/611]	lr: 2.995e-04, eta: 11 days, 16:43:38, time: 7.243, data_time: 6.549, memory: 4110, loss_cls: 1.5789, loss_bbox: 2.9719, loss_obj: 2.7279, loss: 7.2787
2021-09-29 20:28:36,311 - mmdet - INFO - Epoch [3][500/611]	lr: 3.177e-04, eta: 11 days, 17:55:25, time: 6.434, data_time: 5.752, memory: 4110, loss_cls: 1.5609, loss_bbox: 2.9385, loss_obj: 2.7060, loss: 7.2054
2021-09-29 20:34:00,558 - mmdet - INFO - Epoch [3][550/611]	lr: 3.364e-04, eta: 11 days, 19:07:12, time: 6.485, data_time: 5.728, memory: 4110, loss_cls: 1.5267, loss_bbox: 2.9350, loss_obj: 2.6376, loss: 7.0993
2021-09-29 20:39:23,324 - mmdet - INFO - Epoch [3][600/611]	lr: 3.557e-04, eta: 11 days, 20:12:17, time: 6.455, data_time: 5.744, memory: 4110, loss_cls: 1.4802, loss_bbox: 2.8874, loss_obj: 2.5450, loss: 6.9126
2021-09-29 20:40:34,205 - mmdet - INFO - Saving checkpoint at 3 epochs
2021-09-29 20:45:41,529 - mmdet - INFO - Epoch [4][50/611]	lr: 3.799e-04, eta: 11 days, 19:07:04, time: 6.137, data_time: 5.476, memory: 4110, loss_cls: 1.4968, loss_bbox: 2.9593, loss_obj: 2.2622, loss: 6.7183
2021-09-29 20:51:11,781 - mmdet - INFO - Epoch [4][100/611]	lr: 4.004e-04, eta: 11 days, 20:19:34, time: 6.605, data_time: 5.826, memory: 4110, loss_cls: 1.4791, loss_bbox: 2.9182, loss_obj: 2.1554, loss: 6.5528
2021-09-29 21:07:31,292 - mmdet - INFO - Epoch [4][150/611]	lr: 4.213e-04, eta: 12 days, 13:57:32, time: 19.590, data_time: 10.506, memory: 4110, loss_cls: 1.4817, loss_bbox: 2.8917, loss_obj: 2.0944, loss: 6.4678
2021-09-29 21:11:41,702 - mmdet - INFO - Epoch [4][200/611]	lr: 4.428e-04, eta: 12 days, 12:39:12, time: 5.008, data_time: 4.001, memory: 4110, loss_cls: 1.4349, loss_bbox: 2.8536, loss_obj: 2.0771, loss: 6.3655
2021-09-29 21:15:44,012 - mmdet - INFO - Epoch [4][250/611]	lr: 4.649e-04, eta: 12 days, 11:12:41, time: 4.846, data_time: 4.197, memory: 4110, loss_cls: 1.4112, loss_bbox: 2.8445, loss_obj: 2.0240, loss: 6.2797
2021-09-29 21:19:41,916 - mmdet - INFO - Epoch [4][300/611]	lr: 4.875e-04, eta: 12 days, 9:43:47, time: 4.758, data_time: 4.330, memory: 4110, loss_cls: 1.3877, loss_bbox: 2.7843, loss_obj: 1.9384, loss: 6.1103
2021-09-29 21:23:41,858 - mmdet - INFO - Epoch [4][350/611]	lr: 5.106e-04, eta: 12 days, 8:21:35, time: 4.799, data_time: 4.388, memory: 4110, loss_cls: 1.3814, loss_bbox: 2.7694, loss_obj: 1.8709, loss: 6.0217
2021-09-29 21:27:38,153 - mmdet - INFO - Epoch [4][400/611]	lr: 5.343e-04, eta: 12 days, 6:57:58, time: 4.726, data_time: 4.191, memory: 4110, loss_cls: 1.3619, loss_bbox: 2.7317, loss_obj: 1.8401, loss: 5.9337
2021-09-29 21:31:47,078 - mmdet - INFO - Epoch [4][450/611]	lr: 5.585e-04, eta: 12 days, 5:54:32, time: 4.978, data_time: 4.207, memory: 4110, loss_cls: 1.3220, loss_bbox: 2.7158, loss_obj: 1.8047, loss: 5.8425
2021-09-29 21:35:52,962 - mmdet - INFO - Epoch [4][500/611]	lr: 5.832e-04, eta: 12 days, 4:49:43, time: 4.918, data_time: 4.160, memory: 4110, loss_cls: 1.2967, loss_bbox: 2.6758, loss_obj: 1.7611, loss: 5.7336
2021-09-29 21:39:52,619 - mmdet - INFO - Epoch [4][550/611]	lr: 6.085e-04, eta: 12 days, 3:39:33, time: 4.793, data_time: 3.984, memory: 4110, loss_cls: 1.2925, loss_bbox: 2.6710, loss_obj: 1.6751, loss: 5.6385
2021-09-29 21:44:48,418 - mmdet - INFO - Epoch [4][600/611]	lr: 6.343e-04, eta: 12 days, 3:41:40, time: 5.916, data_time: 5.303, memory: 4110, loss_cls: 1.2712, loss_bbox: 2.6435, loss_obj: 1.6903, loss: 5.6050
2021-09-29 21:46:01,553 - mmdet - INFO - Saving checkpoint at 4 epochs
Traceback (most recent call last):
Traceback (most recent call last):
  File "./tools/train.py", line 189, in <module>
  File "./tools/train.py", line 189, in <module>
        main()main()

  File "./tools/train.py", line 185, in main
  File "./tools/train.py", line 185, in main
        meta=meta)meta=meta)

  File "/root/mmdetection/mmdet/apis/train.py", line 174, in train_detector
  File "/root/mmdetection/mmdet/apis/train.py", line 174, in train_detector
        runner.run(data_loaders, cfg.workflow)runner.run(data_loaders, cfg.workflow)

  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 127, in run
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 127, in run
        epoch_runner(data_loaders[i], **kwargs)epoch_runner(data_loaders[i], **kwargs)

  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 50, in train
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 50, in train
        self.run_iter(data_batch, train_mode=True, **kwargs)self.run_iter(data_batch, train_mode=True, **kwargs)

  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 30, in run_iter
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 30, in run_iter
        **kwargs)**kwargs)

  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/parallel/distributed.py", line 51, in train_step
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/parallel/distributed.py", line 51, in train_step
    output = self.module.train_step(*inputs[0], **kwargs[0])
  File "/root/mmdetection/mmdet/models/detectors/base.py", line 238, in train_step
    output = self.module.train_step(*inputs[0], **kwargs[0])
  File "/root/mmdetection/mmdet/models/detectors/base.py", line 238, in train_step
    losses = self(**data)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    losses = self(**data)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/fp16_utils.py", line 97, in new_func
    return forward_call(*input, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/fp16_utils.py", line 97, in new_func
    return old_func(*args, **kwargs)
  File "/root/mmdetection/mmdet/models/detectors/base.py", line 172, in forward
    return self.forward_train(img, img_metas, **kwargs)
  File "/root/mmdetection/mmdet/models/detectors/single_stage.py", line 82, in forward_train
    x = self.extract_feat(img)
  File "/root/mmdetection/mmdet/models/detectors/single_stage.py", line 45, in extract_feat
    x = self.neck(x)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/mmdetection/mmdet/models/necks/yolox_pafpn.py", line 154, in forward
    return old_func(*args, **kwargs)
  File "/root/mmdetection/mmdet/models/detectors/base.py", line 172, in forward
    return self.forward_train(img, img_metas, **kwargs)
  File "/root/mmdetection/mmdet/models/detectors/single_stage.py", line 82, in forward_train
    outs[idx] = conv(outs[idx])
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    x = self.extract_feat(img)
  File "/root/mmdetection/mmdet/models/detectors/single_stage.py", line 45, in extract_feat
    x = self.neck(x)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/cnn/bricks/conv_module.py", line 202, in forward
    return forward_call(*input, **kwargs)
  File "/root/mmdetection/mmdet/models/necks/yolox_pafpn.py", line 154, in forward
    outs[idx] = conv(outs[idx])
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    x = self.activate(x)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/cnn/bricks/conv_module.py", line 202, in forward
    x = self.activate(x)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/cnn/bricks/swish.py", line 24, in forward
    return forward_call(*input, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/cnn/bricks/swish.py", line 24, in forward
        return x * torch.sigmoid(x)return x * torch.sigmoid(x)

RuntimeErrorRuntimeError: : CUDA out of memory. Tried to allocate 36.00 MiB (GPU 2; 10.92 GiB total capacity; 4.75 GiB already allocated; 28.00 MiB free; 4.89 GiB reserved in total by PyTorch)CUDA out of memory. Tried to allocate 36.00 MiB (GPU 1; 10.92 GiB total capacity; 4.75 GiB already allocated; 30.00 MiB free; 4.89 GiB reserved in total by PyTorch)

Traceback (most recent call last):
  File "./tools/train.py", line 189, in <module>
    main()
  File "./tools/train.py", line 185, in main
    meta=meta)
  File "/root/mmdetection/mmdet/apis/train.py", line 174, in train_detector
    runner.run(data_loaders, cfg.workflow)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 127, in run
    epoch_runner(data_loaders[i], **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 50, in train
    self.run_iter(data_batch, train_mode=True, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 30, in run_iter
    **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/parallel/distributed.py", line 51, in train_step
    output = self.module.train_step(*inputs[0], **kwargs[0])
  File "/root/mmdetection/mmdet/models/detectors/base.py", line 238, in train_step
    losses = self(**data)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/runner/fp16_utils.py", line 97, in new_func
    return old_func(*args, **kwargs)
  File "/root/mmdetection/mmdet/models/detectors/base.py", line 172, in forward
    return self.forward_train(img, img_metas, **kwargs)
  File "/root/mmdetection/mmdet/models/detectors/single_stage.py", line 82, in forward_train
    x = self.extract_feat(img)
  File "/root/mmdetection/mmdet/models/detectors/single_stage.py", line 45, in extract_feat
    x = self.neck(x)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/mmdetection/mmdet/models/necks/yolox_pafpn.py", line 154, in forward
    outs[idx] = conv(outs[idx])
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/cnn/bricks/conv_module.py", line 202, in forward
    x = self.activate(x)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/mmcv/cnn/bricks/swish.py", line 24, in forward
    return x * torch.sigmoid(x)
RuntimeError: CUDA out of memory. Tried to allocate 36.00 MiB (GPU 0; 10.92 GiB total capacity; 4.79 GiB already allocated; 20.00 MiB free; 4.93 GiB reserved in total by PyTorch)
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 19936) of binary: /root/anaconda3/envs/openmmlab/bin/python
Traceback (most recent call last):
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launch.py", line 193, in <module>
    main()
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launch.py", line 189, in main
    launch(args)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launch.py", line 174, in launch
    run(args)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/run.py", line 692, in run
    )(*cmd_args)
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launcher/api.py", line 116, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/root/anaconda3/envs/openmmlab/lib/python3.7/site-packages/torch/distributed/launcher/api.py", line 246, in launch_agent
    failures=result.failures,
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
***************************************
        ./tools/train.py FAILED        
=======================================
Root Cause:
[0]:
  time: 2021-09-29_21:46:15
  rank: 0 (local_rank: 0)
  exitcode: 1 (pid: 19936)
  error_file: <N/A>
  msg: "Process failed with exitcode 1"
=======================================
Other Failures:
[1]:
  time: 2021-09-29_21:46:15
  rank: 1 (local_rank: 1)
  exitcode: 1 (pid: 19937)
  error_file: <N/A>
  msg: "Process failed with exitcode 1"
[2]:
  time: 2021-09-29_21:46:15
  rank: 2 (local_rank: 2)
  exitcode: 1 (pid: 19938)
  error_file: <N/A>
  msg: "Process failed with exitcode 1"
***************************************

